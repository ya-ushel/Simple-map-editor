{"version":3,"sources":["app\\store\\configureStore.js"],"names":["configureStore","createStoreWithMiddleware","createHistory","initialState","store","module","hot","accept","nextRootReducer","require","replaceReducer"],"mappings":";;;;;kBAiBwBA,c;;AAjBxB;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMC,4BAA4B;AAChC;AACA,iDAFgC,EAGhC,mCAAiB;AACfC;AADe,CAAjB,CAHgC,EAMhC,8BANgC,qBAAlC;;AASe,SAASF,cAAT,CAAwBG,YAAxB,EAAsC;AACnD,MAAMC,QAAQH,8CAAuCE,YAAvC,CAAd;;AAEA,MAAIE,OAAOC,GAAX,EAAgB;AACd;AACAD,WAAOC,GAAP,CAAWC,MAAX,CAAkB,aAAlB,EAAiC,YAAM;AACrC,UAAMC,kBAAkBC,QAAQ,aAAR,CAAxB;AACAL,YAAMM,cAAN,CAAqBF,eAArB;AACD,KAHD;AAID;;AAED,SAAOJ,KAAP;AACD;;;;;;;;gCArBKH,yB;;gCASkBD,c","file":"configureStore.js","sourceRoot":"C:/Users/Dmitriy/WebstormProjects/FirstProject","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from '../reducers';\nimport { reduxReactRouter, routerStateReducer, ReduxRouter } from 'redux-router';\nimport { devTools } from 'redux-devtools';\nimport thunkMiddleware from 'redux-thunk';\nimport createHistory from 'history/lib/createBrowserHistory';\nimport routes from '../routes';\n\nconst createStoreWithMiddleware = compose(\n  // Save for redux middleware\n  applyMiddleware(thunkMiddleware),\n  reduxReactRouter({\n    createHistory\n  }),\n  devTools()\n)(createStore);\n\nexport default function configureStore(initialState) {\n  const store = createStoreWithMiddleware(rootReducer, initialState);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers', () => {\n      const nextRootReducer = require('../reducers');\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}\n"]}