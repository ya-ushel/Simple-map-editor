{"version":3,"sources":["C:/Users/Dmitriy/WebstormProjects/FirstProject/server/..\\client\\containers\\Map\\parts\\Cell.js"],"names":["Cell","props","onClick","bind","onMove","onMoveStart","onUnmove","onRightClick","x","y","tool","tools","currentItem","mapActions","addMapSource","blocks","selectedBlock","deleteMapSource","addSelection","generateObj","structure","obj","name","currentGeneration","console","log","map","select","nextProps","cellSelected","selectedItem","item","serialNumber","selectCells","e","preventDefault","resetSelections","num","className","mapping"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nexport default class Cell extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onMove = this.onMove.bind(this);\r\n        this.onMoveStart = this.onMoveStart.bind(this);\r\n        this.onUnmove = this.onUnmove.bind(this);\r\n        this.onRightClick = this.onRightClick.bind(this);\r\n    }\r\n\r\n    onClick() {\r\n        let {x, y} = this.props;\r\n        let tool = this.props.tools.currentItem;\r\n        if (tool === 'hand') {\r\n            this.props.mapActions.addMapSource(this.props.blocks.selectedBlock, x, y);\r\n        }\r\n        if (tool === 'delete') {\r\n            this.props.mapActions.deleteMapSource(x, y);\r\n        }\r\n        if (tool === 'select') {\r\n            this.props.mapActions.addSelection(x, y);\r\n        }\r\n        if (tool === 'create') {\r\n            let { generateObj } = this.props.tools;\r\n            let structure = {};\r\n            for(let obj in generateObj){\r\n                if(obj.name === this.props.tools.currentGeneration){\r\n                    structure = obj;\r\n                    break;\r\n                }\r\n            }\r\n            console.log(structure);\r\n            // this.props.mapActions.createStructures(x, y);\r\n        }\r\n    }\r\n\r\n    onMove() {\r\n        let {x, y} = this.props;\r\n        let tool = this.props.tools.currentItem;\r\n        if (this.props.map.select && tool === 'hand') {\r\n            this.props.mapActions.addMapSource(this.props.blocks.selectedBlock, x, y);\r\n        }\r\n        if (this.props.map.select && tool === 'delete') {\r\n            this.props.mapActions.deleteMapSource(x, y);\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        let cellSelected = false;\r\n        this.props.map.selectedItem.map((item) => {\r\n            if (item.x === this.props.x && item.y === this.props.y)\r\n                cellSelected = true;\r\n        });\r\n        return (this.props.serialNumber !== nextProps.serialNumber) || cellSelected;\r\n    }\r\n\r\n    onMoveStart() {\r\n        let {selectCells} = this.props.mapActions;\r\n        selectCells(true);\r\n    }\r\n\r\n    onUnmove() {\r\n        if (this.props.map.select) {\r\n            let {selectCells} = this.props.mapActions;\r\n            selectCells(false);\r\n        }\r\n    }\r\n\r\n    onRightClick(e) {\r\n        e.preventDefault();\r\n        if (this.props.tools.currentItem === 'select') {\r\n            this.props.mapActions.resetSelections();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let num = this.props.serialNumber;\r\n        let className = 'cell ';\r\n\r\n        className += this.props.map.mapping[num] ? this.props.map.mapping[num] : '';\r\n        this.props.map.selectedItem.map((item) => {\r\n            if (item.x === this.props.x && item.y === this.props.y)\r\n                className += 'selected';\r\n        });\r\n        return (\r\n            <div\r\n                className={className}\r\n                onClick={this.onClick}\r\n                onMouseDown={this.onMoveStart}\r\n                onMouseMove={this.onMove}\r\n                onMouseUp={this.onUnmove}\r\n                onContextMenu={this.onRightClick}\r\n            >\r\n\r\n            </div>\r\n        );\r\n    }\r\n}"]}