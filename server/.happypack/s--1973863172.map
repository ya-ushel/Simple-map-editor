{"version":3,"sources":["C:/Users/Dmitriy/WebstormProjects/FirstProject/server/..\\client\\containers\\Map\\Map.js"],"names":["Map","props","cellWidth","document","documentElement","clientWidth","cellHeight","clientHeight","state","gridArray","setState","createGridArray","test","rows","column","array","i","j","console","log"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAGqBA,G;;;AACjB,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA,8GACRA,KADQ;;AAGd,YAAIC,YAAYC,SAASC,eAAT,CAAyBC,WAAzB,GAAuC,EAAvD;AACA,YAAIC,aAAaH,SAASC,eAAT,CAAyBG,YAAzB,GAAwC,EAAzD;;AAEA,cAAKC,KAAL,GAAa;AACTN,gCADS;AAETI,kCAFS;AAGTG,uBAAW;AAHF,SAAb;AANc;AAWjB;;;;6CAEmB;AAChB,iBAAKC,QAAL,CAAc;AACVD,2BAAW,KAAKE,eAAL,EADD;AAEVC,sBAAM;AAFI,aAAd;AAIH;;;0CAEsC;AAAA,gBAAvBC,IAAuB,uEAAhB,EAAgB;AAAA,gBAAZC,MAAY,uEAAH,EAAG;;AACnC,gBAAIC,QAAQ,EAAZ;AACA,iBAAI,IAAIC,IAAI,CAAZ,EAAcA,IAAIF,MAAlB,EAAyBE,GAAzB,EAA6B;AACzBD,sBAAMC,CAAN,IAAW,EAAX;AACA,qBAAI,IAAIC,IAAI,CAAZ,EAAcA,IAAIJ,IAAlB,EAAuBI,GAAvB,EAA2B;AACvBF,0BAAMC,CAAN,EAASC,CAAT,IAAcD,CAAd;AACH;AACJ;AACD,mBAAOD,KAAP;AACH;;;iCAEO;AACJ,gBAAG,KAAKP,KAAL,CAAWI,IAAd,EAAmBM,QAAQC,GAAR,CAAY,GAAZ;AACnB,mBACI;AAAA;AAAA,kBAAK,WAAU,KAAf;AAEI,gEAAM,WAAW,KAAKX,KAAL,CAAWC,SAA5B;AAFJ,aADJ;AAMH;;;;;;kBAxCgBT,G","sourcesContent":["import React, {Component} from 'react';\r\nimport Grid from './Rest/Grid';\r\n\r\n\r\nexport default class Map extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let cellWidth = document.documentElement.clientWidth / 32;\r\n        let cellHeight = document.documentElement.clientHeight / 15;\r\n\r\n        this.state = {\r\n            cellWidth,\r\n            cellHeight,\r\n            gridArray: [],\r\n        };\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            gridArray: this.createGridArray(),\r\n            test: true\r\n        });\r\n    }\r\n\r\n    createGridArray(rows = 31, column = 18){\r\n        let array = [];\r\n        for(let i = 0;i < column;i++){\r\n            array[i] = [];\r\n            for(let j = 0;j < rows;j++){\r\n                array[i][j] = i;\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    render(){\r\n        if(this.state.test)console.log('1');\r\n        return(\r\n            <div className=\"map\">\r\n                {/*{`${this.state.countRows} : ${this.state.countColumn}`}*/}\r\n                <Grid gridArray={this.state.gridArray}/>\r\n            </div>\r\n        );\r\n    }\r\n}"]}