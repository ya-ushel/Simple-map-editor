{"version":3,"sources":["C:/Users/Dmitriy/WebstormProjects/FirstProject/server/..\\client\\containers\\Map\\Map.js"],"names":["Map","props","clientWidth","document","documentElement","clientHeight","state","countColumn","Math","floor","countRows","gridArray","test","setState","createGridArray","rows","column","array","i","j","console","log"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAGqBA,G;;;AACjB,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA,8GACRA,KADQ;;AAGd,YAAIC,cAAcC,SAASC,eAAT,CAAyBF,WAA3C;AACA,YAAIG,eAAeF,SAASC,eAAT,CAAyBC,YAA5C;;AAEA,cAAKC,KAAL,GAAa;AACTC,yBAAaC,KAAKC,KAAL,CAAWJ,eAAe,EAA1B,CADJ;AAETK,uBAAWF,KAAKC,KAAL,CAAWP,cAAc,EAAzB,CAFF;AAGTS,uBAAW,EAHF;AAITC,kBAAM;;AAJG,SAAb;AANc;AAajB;;;;oDAE0B;AACvB,iBAAKC,QAAL,CAAc;AACVF,2BAAW,KAAKG,eAAL;AADD,aAAd;AAGH;;;0CAEkE;AAAA,gBAAnDC,IAAmD,uEAA5C,KAAKT,KAAL,CAAWS,IAAiC;AAAA,gBAA3BC,MAA2B,uEAAlB,KAAKV,KAAL,CAAWU,MAAO;;AAC/D,gBAAIC,QAAQ,EAAZ;;AAEA,iBAAI,IAAIC,IAAI,CAAZ,EAAcA,IAAIH,IAAlB,EAAuBG,GAAvB,EAA2B;AACvBD,sBAAMC,CAAN,IAAW,EAAX;AACA,qBAAI,IAAIC,IAAI,CAAZ,EAAcA,IAAIH,MAAlB,EAAyBG,GAAzB;AACIF,0BAAMC,CAAN,EAASC,CAAT,IAAc,CAAd;AADJ;AAEH;AAEJ;;;iCAEO;AACJ,gBAAG,KAAKb,KAAL,CAAWM,IAAd,EAAmBQ,QAAQC,GAAR,CAAY,GAAZ;AACnB,mBACI;AAAA;AAAA,kBAAK,WAAU,KAAf;AAEI,gEAAM,WAAW,KAAKf,KAAL,CAAWK,SAA5B;AAFJ,aADJ;AAMH;;;;;;kBAzCgBX,G","sourcesContent":["import React, {Component} from 'react';\r\nimport Grid from './Rest/Grid';\r\n\r\n\r\nexport default class Map extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let clientWidth = document.documentElement.clientWidth;\r\n        let clientHeight = document.documentElement.clientHeight;\r\n\r\n        this.state = {\r\n            countColumn: Math.floor(clientHeight / 50),\r\n            countRows: Math.floor(clientWidth / 50),\r\n            gridArray: [],\r\n            test: false,\r\n\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(){\r\n        this.setState({\r\n            gridArray: this.createGridArray()\r\n        });\r\n    }\r\n\r\n    createGridArray(rows = this.state.rows, column = this.state.column){\r\n        let array = [];\r\n\r\n        for(let i = 0;i < rows;i++){\r\n            array[i] = [];\r\n            for(let j = 0;j < column;j++)\r\n                array[i][j] = 0;\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        if(this.state.test)console.log('1');\r\n        return(\r\n            <div className=\"map\">\r\n                {/*{`${this.state.countRows} : ${this.state.countColumn}`}*/}\r\n                <Grid gridArray={this.state.gridArray}/>\r\n            </div>\r\n        );\r\n    }\r\n}"]}