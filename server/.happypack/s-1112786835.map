{"version":3,"sources":["C:/Users/Dmitriy/WebstormProjects/FirstProject/server/..\\client\\containers\\Blocks\\Blocks.js"],"names":["blocksActions","toolsActions","LeftNavButton","props","onClick","RightNavButton","Blocks","initBlocks","arrayBlocks","i","state","num","setSelectedBlock","newArray","map","source","selectedItem","item","x","y","settings","dots","draggable","initialSlide","infinite","speed","slidesToShow","slidesToScroll","variableWidth","className","prevArrow","nextArrow","sliderContent","blocks","temp","mapping","selectedBlock","push","selectBlockHandle","bind","length","mapStateToProps","blocksReducer","mapReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Slider from 'react-slick';\r\nimport {connect} from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as blocksActions from '../../actions/blocksActions';\r\nimport * as toolsActions from '../../actions/toolsActions';\r\n\r\nclass LeftNavButton extends Component {\r\n    render() {\r\n        return <div onClick={this.props.onClick} className=\"prevArrow\">{'<'}</div>\r\n    }\r\n}\r\nclass RightNavButton extends Component {\r\n    render() {\r\n        return <div onClick={this.props.onClick} className=\"prevArrow\">{'>'}</div>\r\n    }\r\n}\r\n\r\nclass Blocks extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const { initBlocks } = props.blocksActions;\r\n        let arrayBlocks = [];\r\n        for(let i = 1;i<26;i++){\r\n            arrayBlocks[i] = i;\r\n        }\r\n        initBlocks(arrayBlocks);\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n    }\r\n\r\n    selectBlockHandle(num){\r\n\r\n        this.props.blocksActions.setSelectedBlock(num);\r\n\r\n        let newArray = this.props.map.source;\r\n\r\n        this.props.map.selectedItem.map( (item)=>{\r\n            newArray[item.x][item.y] = num;\r\n        });\r\n    }\r\n\r\n    render(){\r\n\r\n        let settings = {\r\n            dots: false,\r\n            draggable: false,\r\n            initialSlide: 0,\r\n            infinite: false,\r\n            speed: 500,\r\n            slidesToShow: 10,\r\n            slidesToScroll: 2,\r\n            variableWidth: true,\r\n            className: 'blocksCarousel',\r\n            prevArrow:<LeftNavButton/>,\r\n            nextArrow: <RightNavButton/>,\r\n        };\r\n\r\n        let sliderContent = [];\r\n        this.props.blocks.blocks.map( (item,i)=>{\r\n            let temp = this.props.map.mapping[i];\r\n            if(this.props.blocks.selectedBlock === item)\r\n                temp += ' selected';\r\n            temp += ' block';\r\n\r\n            sliderContent.push(\r\n                <div\r\n                    className={temp}\r\n                    key={i}\r\n                    onClick={this.selectBlockHandle.bind(this,i)}\r\n                >{+item}</div>);\r\n        });\r\n        if(!sliderContent.length){\r\n            sliderContent = (<div className=\"block\">Loading...</div>);\r\n        }\r\n\r\n        return(\r\n            <div className=\"blocks\">\r\n                <div className=\"blocksContainer\">\r\n                    <Slider {...settings} style=\"display: flex;\">\r\n                        {sliderContent}\r\n                    </Slider>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        blocks: state.blocksReducer,\r\n        map: state.mapReducer,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return{\r\n        blocksActions: bindActionCreators(blocksActions, dispatch),\r\n        toolsActions: bindActionCreators(toolsActions, dispatch),\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Blocks);"]}