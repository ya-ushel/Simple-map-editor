{"version":3,"sources":["C:/Users/Dmitriy/WebstormProjects/FirstProject/server/..\\client\\containers\\Map\\Map.js"],"names":["mapActions","Map","props","clientWidth","document","documentElement","clientHeight","initMapping","initMapSelect","initMapSelectFunc","state","countColumn","Math","floor","countRows","gridArray","test","window","addEventListener","forceUpdate","setState","createGridArray","nextProps","map","source","rows","column","array","i","j","initMap","width","height","console","log","updateMapSize","tools","blocks","mapStateToProps","mapReducer","toolsReducer","blocksReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import {connect} from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as mapActions from '../../actions/mapActions';\r\nimport React, {Component} from 'react';\r\nimport Grid from './parts/Grid';\r\n\r\n\r\n// function initMapSelectFunc(initMapSelect) {\r\n//     let selectArray = [];\r\n//     for(let i = 0;i < 15;i++){\r\n//         selectArray[i] = [];\r\n//         for(let j = 0;j < 32;j++){\r\n//             selectArray[i][j] = 0;\r\n//         }\r\n//     }\r\n//\r\n//     initMapSelect(selectArray);\r\n// }\r\n\r\nclass Map extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let clientWidth = document.documentElement.clientWidth;\r\n        let clientHeight = document.documentElement.clientHeight;\r\n\r\n        const { initMapping,initMapSelect } = props.mapActions;\r\n        initMapping({\r\n            1: 'grassHalf ',\r\n            2: 'grassHalfLeft ',\r\n            3: 'grassHalfMid ',\r\n            4: 'grassHalfRight ',\r\n            5: 'slice01_01 ',\r\n            6: 'slice02_02 ',\r\n            7: 'slice03_03 ',\r\n            8: 'slice04_04 ',\r\n            9: 'slice05_05 ',\r\n            10: 'slice06_06 ',\r\n        });\r\n\r\n        initMapSelectFunc(initMapSelect);\r\n\r\n        this.state = {\r\n            countColumn: Math.floor(clientWidth / 50),\r\n            countRows: Math.floor(clientHeight / 50),\r\n            gridArray: [],\r\n            test: false,\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener('resize', () => this.forceUpdate())\r\n    }\r\n\r\n    componentWillMount(){\r\n\r\n        this.setState({\r\n            gridArray: this.createGridArray(),\r\n            test: true\r\n        });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps){\r\n        this.setState({\r\n            gridArray: nextProps.map.source,\r\n        });\r\n        return true;\r\n    }\r\n\r\n    createGridArray(rows = this.state.countRows, column = this.state.countColumn){\r\n        let array = [];\r\n        for(let i = 0;i < rows;i++){\r\n            array[i] = [];\r\n            for(let j = 0;j < column;j++){\r\n\r\n            }\r\n        }\r\n        const { initMap } = this.props.mapActions;\r\n        initMap(array, this.state.countColumn, this.state.countRows);\r\n        return array;\r\n    }\r\n\r\n\r\n\r\n    forceUpdate(){\r\n\r\n        const width = Math.floor(document.documentElement.clientWidth / 50);\r\n        const height = Math.floor(document.documentElement.clientHeight / 50);\r\n\r\n        if( width !== this.state.countColumn || height !== this.state.countRows){\r\n            this.setState({\r\n                countColumn: width,\r\n                countRows: height,\r\n            });\r\n\r\n            console.log('THIS STATE WIDTH', this.state.countColumn);\r\n            const { updateMapSize } = this.props.mapActions;\r\n            updateMapSize(width,height);\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        const map = this.props.map;\r\n        // console.log('RENDER MAP',map);\r\n        return(\r\n            <div className=\"map\"  >\r\n                <Grid\r\n                    map={map}\r\n                    mapActions = {this.props.mapActions}\r\n                    tools = {this.props.tools}\r\n                    blocks = {this.props.blocks}\r\n                    // initMapSelectFunc = {initMapSelectFunc}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        map: state.mapReducer,\r\n        tools: state.toolsReducer,\r\n        blocks: state.blocksReducer,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return{\r\n        mapActions: bindActionCreators(mapActions, dispatch)\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);"]}