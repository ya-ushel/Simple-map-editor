/* REACT HOT LOADER */ if (module.hot) { (function () { var ReactHotAPI = require("C:\\Users\\Dmitriy\\WebstormProjects\\FirstProject\\node_modules\\react-hot-api\\modules\\index.js"), RootInstanceProvider = require("C:\\Users\\Dmitriy\\WebstormProjects\\FirstProject\\node_modules\\react-hot-loader\\RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactRedux = require('react-redux');

var _redux = require('redux');

var _mapActions = require('../../actions/mapActions');

var mapActions = _interopRequireWildcard(_mapActions);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Grid = require('./parts/Grid');

var _Grid2 = _interopRequireDefault(_Grid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Map = function (_Component) {
    _inherits(Map, _Component);

    function Map(props) {
        _classCallCheck(this, Map);

        var _this = _possibleConstructorReturn(this, (Map.__proto__ || Object.getPrototypeOf(Map)).call(this, props));

        var clientWidth = document.documentElement.clientWidth;
        var clientHeight = document.documentElement.clientHeight;

        var initMapping = props.mapActions.initMapping;

        initMapping({
            '1': 'grass1_1',
            '2': 'grass2_1 ',
            '3': 'grass2_2 ',
            '4': 'grass04_01 ',
            '5': 'grass05_01 ',
            '6': 'grass05_02 ',
            '7': 'grass06_01 ',
            '8': 'grass06_02 ',
            '9': 'grass06_03 ',
            '10': 'grass06_04 ',
            '11': 'grass07_01 ',
            '12': 'grass08_01 ',
            '13': 'grass08_02 ',
            '14': 'grass09_01 ',
            '15': 'grass09_02 ',
            '16': 'grass10_01 ',
            '17': 'grass10_02 ',
            '18': 'grass11_01 ',
            '19': 'grass12_01 ',
            '20': 'grass12_02 ',
            '21': 'grass12_03 ',
            '22': 'grass12_04 ',
            '23': 'grass13_01 ',
            '24': 'grass13_02 ',
            '25': 'grass13_03 ',
            '26': 'grass13_04 ',
            '27': 'grass14_01 ',
            '28': 'grass14_02 ',
            '29': 'grass14_03 ',
            '30': 'grass14_04 ',
            '31': 'grass15_01 ',
            '32': 'grass16_01 ',
            '33': 'grass3_1 '
        });

        _this.state = {
            countColumn: Math.ceil(clientWidth / 50),
            countRows: Math.ceil(clientHeight / 50),
            gridArray: [],
            test: false

        };
        return _this;
    }

    _createClass(Map, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            window.addEventListener('resize', function () {
                return _this2.forceUpdate();
            });
        }
    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.setState({
                gridArray: this.createGridArray()
            });
        }
    }, {
        key: 'createGridArray',
        value: function createGridArray() {
            var rows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.countRows;
            var column = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.countColumn;

            var array = [];
            for (var i = 0; i < rows; i++) {
                array[i] = [];
                for (var j = 0; j < column; j++) {}
            }
            var initMap = this.props.mapActions.initMap;

            initMap(array, this.state.countColumn, this.state.countRows);
            return array;
        }
    }, {
        key: 'forceUpdate',
        value: function forceUpdate() {

            var width = Math.floor(document.documentElement.clientWidth / 50);
            var height = Math.floor(document.documentElement.clientHeight / 50);

            if (width !== this.state.countColumn || height !== this.state.countRows) {
                this.setState({
                    countColumn: width,
                    countRows: height
                });

                var updateMapSize = this.props.mapActions.updateMapSize;

                updateMapSize(width, height);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var map = this.props.map;
            return _react2.default.createElement(
                'div',
                { className: 'map' },
                _react2.default.createElement(_Grid2.default, {
                    map: map,
                    mapActions: this.props.mapActions,
                    tools: this.props.tools,
                    blocks: this.props.blocks
                })
            );
        }
    }]);

    return Map;
}(_react.Component);

function mapStateToProps(state) {
    return {
        map: state.mapReducer,
        tools: state.toolsReducer,
        blocks: state.blocksReducer
    };
}

function mapDispatchToProps(dispatch) {
    return {
        mapActions: (0, _redux.bindActionCreators)(mapActions, dispatch)
    };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Map);

/* REACT HOT LOADER */ }).call(this); } finally { if (module.hot) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("C:\\Users\\Dmitriy\\WebstormProjects\\FirstProject\\node_modules\\react-hot-loader\\makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "Map.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }