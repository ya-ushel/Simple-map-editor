{"version":3,"sources":["C:/Users/Dmitriy/WebstormProjects/FirstProject/server/..\\client\\containers\\Blocks\\Blocks.js"],"names":["blocksActions","LeftNavButton","props","onClick","RightNavButton","Blocks","state","settings","dots","infinite","draggable","focusOnSelect","speed","slidesToShow","slidesToScroll","variableWidth","className","prevArrow","nextArrow","sliderContent","blocks","selectedBlock","mapStateToProps","blocksReducer","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;IAAYA,a;;;;;;;;;;;;IAENC,a;;;;;;;;;;;iCACO;AACL,mBAAO;AAAA;AAAA,kBAAK,SAAS,KAAKC,KAAL,CAAWC,OAAzB,EAAkC,WAAU,WAA5C;AAAyD;AAAzD,aAAP;AACH;;;;;;IAECC,c;;;;;;;;;;;iCACO;AACL,mBAAO;AAAA;AAAA,kBAAK,SAAS,KAAKF,KAAL,CAAWC,OAAzB,EAAkC,WAAU,WAA5C;AAAyD;AAAzD,aAAP;AACH;;;;;;IAGCE,M;;;AACF,oBAAYH,KAAZ,EAAkB;AAAA;;AAAA,qHACRA,KADQ;;AAGd,eAAKI,KAAL,GAAa,EAAb;;AAHc;AAOjB;;;;iCAIO;;AAEJ,gBAAIC,WAAW;AACXC,sBAAM,KADK;AAEXC,0BAAU,IAFC;AAGXC,2BAAW,KAHA;AAIXC,+BAAe,IAJJ;AAKXC,uBAAO,GALI;AAMXC,8BAAc,EANH;AAOXC,gCAAgB,CAPL;AAQXC,+BAAe,IARJ;AASXC,2BAAW,gBATA;AAUXC,2BAAU,8BAAC,aAAD,OAVC;AAWXC,2BAAW,8BAAC,cAAD;AAXA,aAAf;;AAcA,gBAAIC,gBAAgB,KAAKjB,KAAL,CAAWkB,MAAX,CAAkBC,aAAtC;;AAEA,mBACI;AAAA;AAAA,kBAAK,WAAU,QAAf;AACI;AAAA;AAAA,sBAAK,WAAU,iBAAf;AACI;AAAA;AAAA,qCAAYd,QAAZ,IAAsB,OAAM,gBAA5B;AACI;AAAA;AAAA,8BAAK,WAAU,OAAf;AAAA;AAAA;AADJ;AADJ;AADJ,aADJ;AAUH;;;;;;AAGL,SAASe,eAAT,CAA0BhB,KAA1B,EAAiC;AAC7B,WAAO;AACHc,gBAAQd,MAAMiB;AADX,KAAP;AAGH;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,WAAM;AACFzB,uBAAe,+BAAmBA,aAAnB,EAAkCyB,QAAlC;AADb,KAAN;AAGH;;kBAGc,yBAAQH,eAAR,EAAyBE,kBAAzB,EAA6CnB,MAA7C,C","sourcesContent":["import React, {Component} from 'react';\r\nimport Slider from 'react-slick';\r\nimport {connect} from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as blocksActions from '../../actions/blocksActions';\r\n\r\nclass LeftNavButton extends Component {\r\n    render() {\r\n        return <div onClick={this.props.onClick} className=\"prevArrow\">{'<'}</div>\r\n    }\r\n}\r\nclass RightNavButton extends Component {\r\n    render() {\r\n        return <div onClick={this.props.onClick} className=\"prevArrow\">{'>'}</div>\r\n    }\r\n}\r\n\r\nclass Blocks extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n\r\n        let settings = {\r\n            dots: false,\r\n            infinite: true,\r\n            draggable: false,\r\n            focusOnSelect: true,\r\n            speed: 500,\r\n            slidesToShow: 10,\r\n            slidesToScroll: 2,\r\n            variableWidth: true,\r\n            className: 'blocksCarousel',\r\n            prevArrow:<LeftNavButton/>,\r\n            nextArrow: <RightNavButton/>,\r\n        };\r\n\r\n        let sliderContent = this.props.blocks.selectedBlock;\r\n\r\n        return(\r\n            <div className=\"blocks\">\r\n                <div className=\"blocksContainer\">\r\n                    <Slider {...settings} style=\"display: flex;\">\r\n                        <div className=\"block\">1</div>\r\n                        {/*{ sliderContent }*/}\r\n                    </Slider>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        blocks: state.blocksReducer,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return{\r\n        blocksActions: bindActionCreators(blocksActions, dispatch)\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Blocks);"]}