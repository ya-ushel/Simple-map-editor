{"version":3,"sources":["C:/Users/Dmitriy/WebstormProjects/FirstProject/server/..\\client\\containers\\App\\App.js"],"names":["myNews","author","text","bigText","Article","props","state","visible","e","preventDefault","setState","data","readMoreClick","bind","News","newsTemplate","length","map","item","index","SimpleInput","check","inputName","inputText","buttonDisabled","onClickButton","findDOMNode","refs","testInput","focus","fieldName","value","target","trim","console","log","testText","push","onChangeField","App","user","surname","age","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet myNews = [\r\n    {\r\n        author: 'Саша Печкин',\r\n        text: 'В четчерг, четвертого числа...',\r\n        bigText: 'в четыре с четвертью часа четыре чёрненьких чумазеньких чертёнка чертили чёрными чернилами чертёж.'\r\n    },\r\n    {\r\n        author: 'Просто Вася',\r\n        text: 'Считаю, что $ должен стоить 35 рублей!',\r\n        bigText: 'А евро 42!'\r\n    },\r\n    {\r\n        author: 'Гость',\r\n        text: 'Бесплатно. Скачать. Лучший сайт - http://localhost:3000',\r\n        bigText: 'На самом деле платно, просто нужно прочитать очень длинное лицензионное соглашение'\r\n    }\r\n];\r\n\r\nclass Article extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            visible: false\r\n        };\r\n    }\r\n\r\n    readMoreClick(e){\r\n        e.preventDefault();\r\n\r\n        this.setState( {visible: !this.state.visible} );\r\n    }\r\n\r\n    render(){\r\n\r\n        let author = this.props.data.author;\r\n        let text = this.props.data.text;\r\n        let bigText = '';\r\n\r\n        if(this.state.visible)\r\n            bigText = this.props.data.bigText;\r\n\r\n        return(\r\n          <div className=\"article\">\r\n              <h3>{author}</h3>\r\n              <p>{text}</p>\r\n              <a href=\"#\" onClick={this.readMoreClick.bind(this)}>Read more...</a>\r\n              <p>{bigText}</p>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass News extends Component{\r\n    render(){\r\n        const data = this.props.data;\r\n        let newsTemplate;\r\n\r\n        if(data.length){\r\n            newsTemplate = data.map((item,index)=>{\r\n                return(\r\n                    <Article key={index} data={ {author:item.author,text:item.text, bigText:item.bigText} }/>\r\n                );\r\n            });\r\n        }\r\n        else{\r\n            newsTemplate = <p>No news yet</p>\r\n        }\r\n\r\n        return(\r\n            <div className=\"news\">\r\n                {newsTemplate}\r\n                <strong>Total news: {data.length}</strong>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SimpleInput extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            check: false,\r\n            inputName: false,\r\n            inputText: false,\r\n            buttonDisabled: true\r\n        };\r\n        this.onClickButton = this.onClickButton.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        ReactDOM.findDOMNode(this.refs.testInput).focus();\r\n    }\r\n\r\n    onChangeField(fieldName,e){\r\n\r\n        let value = e.target.value;\r\n\r\n        if(value.trim().length === 0) this.state[fieldName] = false;\r\n        else this.state[fieldName] = true;\r\n\r\n        if(this.state.inputText && this.state.inputName && this.state.check){\r\n            this.setState({buttonDisabled : false});\r\n            console.log('22222');\r\n        }\r\n        else{\r\n            console.log('1111');\r\n            this.setState({buttonDisabled : true});\r\n        }\r\n\r\n    }\r\n\r\n    onClickButton(){\r\n\r\n        const author = ReactDOM.findDOMNode(this.refs.testInput).value;\r\n        const bigText = ReactDOM.findDOMNode(this.refs.testText).value;\r\n        const text = bigText;\r\n        myNews.push({\r\n            author,\r\n            text,\r\n            bigText,\r\n        });\r\n\r\n        console.log(myNews);\r\n\r\n        this.setState({\r\n            bigText:''\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"inputNews\">\r\n                <input\r\n                    className=\"inputName\"\r\n                    ref=\"testInput\"\r\n                    type=\"text\"\r\n                    onChange={this.onChangeField.bind(this,'inputName')}\r\n                    placeholder='Enter value'\r\n                />\r\n                <textarea\r\n                    className=\"inputText\"\r\n                    ref=\"testText\"\r\n                    cols=\"40\"\r\n                    rows=\"10\"\r\n                    onChange={this.onChangeField.bind(this,'inputText')}\r\n                />\r\n                <button onClick={this.onClickButton} disabled={this.state.buttonDisabled}>Ok</button>\r\n                <input type=\"checkbox\" onChange={this.onChangeField.bind(this,'check')}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    render() {\r\n\r\n        const {user,surname,age} = this.props.user;\r\n        return (\r\n            <div className=\"app\">\r\n                <p>`Name: ${user}`</p>\r\n                <p>`Surname: ${surname}`</p>\r\n                <p>`Age: ${age}`</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n"]}