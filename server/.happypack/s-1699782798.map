{"version":3,"sources":["C:/Users/Dmitriy/WebstormProjects/FirstProject/server/..\\client\\containers\\Blocks\\Blocks.js"],"names":["blocksActions","toolsActions","LeftNavButton","props","onClick","RightNavButton","Blocks","initBlocks","arrayBlocks","mapping","map","console","log","num","setSelectedBlock","newArray","source","selectedItem","item","x","y","settings","draggable","initialSlide","infinite","speed","slidesToShow","slidesToScroll","className","prevArrow","nextArrow","variableWidth","sliderContent","blocks","i","temp","selectedBlock","push","selectBlockHandle","bind","length","mapStateToProps","state","blocksReducer","mapReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Slider from 'react-slick';\r\nimport {connect} from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as blocksActions from '../../actions/blocksActions';\r\nimport * as toolsActions from '../../actions/toolsActions';\r\n\r\nclass LeftNavButton extends Component {\r\n    render() {\r\n        return <div onClick={this.props.onClick} className=\"prevArrow\"><div/></div>\r\n    }\r\n}\r\nclass RightNavButton extends Component {\r\n    render() {\r\n        return <div onClick={this.props.onClick} className=\"nextArrow\"><div src=\"/img/nextArrow.png\"/></div>\r\n    }\r\n}\r\n\r\nclass Blocks extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const { initBlocks } = props.blocksActions;\r\n        let arrayBlocks = [];\r\n        let {...mapping} = props.map.mapping;\r\n        console.log(mapping);\r\n        initBlocks(arrayBlocks);\r\n\r\n\r\n    }\r\n\r\n    selectBlockHandle(num){\r\n\r\n        this.props.blocksActions.setSelectedBlock(num);\r\n\r\n        let newArray = this.props.map.source;\r\n\r\n        this.props.map.selectedItem.map( (item)=>{\r\n            newArray[item.x][item.y] = num;\r\n        });\r\n    }\r\n\r\n    render(){\r\n\r\n        let settings = {\r\n            draggable: false,\r\n            initialSlide: 0,\r\n            infinite: false,\r\n            speed: 500,\r\n            slidesToShow: 8,\r\n            slidesToScroll: 2,\r\n            className: 'blocksCarousel',\r\n            prevArrow: <LeftNavButton/>,\r\n            nextArrow: <RightNavButton/>,\r\n            variableWidth: true,\r\n        };\r\n\r\n        let sliderContent = [];\r\n        this.props.blocks.blocks.map( (item,i)=>{\r\n            let temp = this.props.map.mapping[i];\r\n            if(this.props.blocks.selectedBlock === item)\r\n                temp += ' selected';\r\n            temp += ' block';\r\n\r\n            sliderContent.push(\r\n                <div\r\n                    className={temp}\r\n                    key={i}\r\n                    onClick={this.selectBlockHandle.bind(this,i)}\r\n                />);\r\n        });\r\n        if(!sliderContent.length){\r\n            sliderContent = (<div className=\"block\">Loading...</div>);\r\n        }\r\n\r\n        return(\r\n            <div className=\"blocksContainer\">\r\n                <div className=\"blocks\">\r\n                    <Slider {...settings} style=\"width: 600px;\">\r\n                        {sliderContent}\r\n                    </Slider>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        blocks: state.blocksReducer,\r\n        map: state.mapReducer,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return{\r\n        blocksActions: bindActionCreators(blocksActions, dispatch),\r\n        toolsActions: bindActionCreators(toolsActions, dispatch),\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Blocks);"]}