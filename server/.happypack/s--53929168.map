{"version":3,"sources":["C:/Users/Dmitriy/WebstormProjects/FirstProject/server/..\\client\\containers\\Map\\Map.js"],"names":["mapActions","Map","props","clientWidth","document","documentElement","clientHeight","state","countColumn","Math","floor","countRows","gridArray","test","setState","createGridArray","nextProps","map","array","console","log","rows","column","i","j","initMap","clickHandle","bind","mapStateToProps","mapReducer","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;AAAA;;AACA;;AACA;;IAAYA,U;;AACZ;;;;AACA;;;;;;;;;;;;;;IAGMC,G;;;AACF,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA,8GACRA,KADQ;;AAGd,YAAIC,cAAcC,SAASC,eAAT,CAAyBF,WAA3C;AACA,YAAIG,eAAeF,SAASC,eAAT,CAAyBC,YAA5C;;AAIA,cAAKC,KAAL,GAAa;AACTC,yBAAaC,KAAKC,KAAL,CAAWJ,eAAe,EAA1B,CADJ;AAETK,uBAAWF,KAAKC,KAAL,CAAWP,cAAc,EAAzB,CAFF;AAGTS,uBAAW,EAHF;AAITC,kBAAM;;AAJG,SAAb;AARc;AAejB;;;;6CAEmB;AAChB,iBAAKC,QAAL,CAAc;AACVF,2BAAW,KAAKG,eAAL,EADD;AAEVF,sBAAM;AAFI,aAAd;AAIH;;;8CAEqBG,S,EAAU;AAC5B,iBAAKF,QAAL,CAAc;AACVF,2BAAWI,UAAUC,GAAV,CAAcC;AADf,aAAd;AAGAC,oBAAQC,GAAR,CAAYJ,SAAZ,EAAsB,QAAtB;AACA,mBAAO,IAAP;AACH;;;0CAE4E;AAAA,gBAA7DK,IAA6D,uEAAtD,KAAKd,KAAL,CAAWI,SAA2C;AAAA,gBAAhCW,MAAgC,uEAAvB,KAAKf,KAAL,CAAWC,WAAY;;AACzE,gBAAIU,QAAQ,EAAZ;AACA,iBAAI,IAAIK,IAAI,CAAZ,EAAcA,IAAID,MAAlB,EAAyBC,GAAzB,EAA6B;AACzBL,sBAAMK,CAAN,IAAW,EAAX;AACA,qBAAI,IAAIC,IAAI,CAAZ,EAAcA,IAAIH,IAAlB,EAAuBG,GAAvB,EAA2B;AACvBN,0BAAMK,CAAN,EAASC,CAAT,IAAcD,CAAd;AACH;AACJ;AAPwE,gBAQjEE,OARiE,GAQrD,KAAKvB,KAAL,CAAWF,UAR0C,CAQjEyB,OARiE;;AASzEA,oBAAQP,KAAR;AACA,mBAAOA,KAAP;AACH;;;sCAEY;AACTC,oBAAQC,GAAR,CAAY,KAAKlB,KAAL,CAAWe,GAAvB,EAA4B,iBAA5B;AACH;;;iCAEO;;AAEJ,gBAAMA,MAAM,KAAKV,KAAL,CAAWK,SAAvB;AACA,gBAAMZ,aAAa,KAAKE,KAAL,CAAWF,UAA9B;AACAmB,oBAAQC,GAAR,CAAY,YAAZ,EAAyBH,GAAzB;AACA,mBACI;AAAA;AAAA,kBAAK,WAAU,KAAf,EAAqB,SAAS,KAAKS,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAA9B;AACI,gEAAM,WAAWV,GAAjB,EAAsB,YAAcjB,UAApC;AADJ,aADJ;AAKH;;;;;;AAGL,SAAS4B,eAAT,CAA0BrB,KAA1B,EAAiC;AAC7B,WAAO;AACHU,aAAKV,MAAMsB;AADR,KAAP;AAGH;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,WAAM;AACF/B,oBAAY,+BAAmBA,UAAnB,EAA+B+B,QAA/B;AADV,KAAN;AAGH;;kBAGc,yBAAQH,eAAR,EAAyBE,kBAAzB,EAA6C7B,GAA7C,C","sourcesContent":["import {connect} from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as mapActions from '../../actions/mapAction';\r\nimport React, {Component} from 'react';\r\nimport Grid from './parts/Grid';\r\n\r\n\r\nclass Map extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let clientWidth = document.documentElement.clientWidth;\r\n        let clientHeight = document.documentElement.clientHeight;\r\n\r\n\r\n\r\n        this.state = {\r\n            countColumn: Math.floor(clientHeight / 50),\r\n            countRows: Math.floor(clientWidth / 50),\r\n            gridArray: [],\r\n            test: false,\r\n\r\n        };\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            gridArray: this.createGridArray(),\r\n            test: true\r\n        });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps){\r\n        this.setState({\r\n            gridArray: nextProps.map.array,\r\n        });\r\n        console.log(nextProps,'should');\r\n        return true;\r\n    }\r\n\r\n    createGridArray(rows = this.state.countRows, column = this.state.countColumn){\r\n        let array = [];\r\n        for(let i = 0;i < column;i++){\r\n            array[i] = [];\r\n            for(let j = 0;j < rows;j++){\r\n                array[i][j] = i;\r\n            }\r\n        }\r\n        const { initMap } = this.props.mapActions;\r\n        initMap(array);\r\n        return array;\r\n    }\r\n\r\n    clickHandle(){\r\n        console.log(this.props.map, 'MAP HANDLECLICK');\r\n    }\r\n\r\n    render(){\r\n\r\n        const map = this.state.gridArray;\r\n        const mapActions = this.props.mapActions;\r\n        console.log('RENDER MAP',map);\r\n        return(\r\n            <div className=\"map\" onClick={this.clickHandle.bind(this)}>\r\n                <Grid gridArray={map} mapActions = {mapActions}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        map: state.mapReducer,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return{\r\n        mapActions: bindActionCreators(mapActions, dispatch)\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);"]}