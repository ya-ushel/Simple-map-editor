{"version":3,"sources":["C:/Users/Dmitriy/WebstormProjects/FirstProject/server/..\\client\\containers\\Map\\parts\\Cell.js"],"names":["Cell","props","state","isMouseDown","x","y","newArray","map","source","mapActions","changedMapSource","select","console","log","selectCells","num","serialNumber","temp","mapping","moveStartHandle","bind","selectHandle","unMoveHandle"],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;IAEqBA,I;;;AACjB,kBAAYC,KAAZ,EAAkB;AAAA;;AAAA,gHACRA,KADQ;;AAGd,cAAKC,KAAL,GAAc;AACVC,yBAAa;AADH,SAAd;AAHc;AAMjB;;;;oCAEWC,C,EAAEC,C,EAAE;AACZ,gBAAIC,WAAW,KAAKL,KAAL,CAAWM,GAAX,CAAeC,MAA9B;AACAF,qBAASF,CAAT,EAAYC,CAAZ,IAAiB,CAAjB;AACA,iBAAKJ,KAAL,CAAWQ,UAAX,CAAsBC,gBAAtB,CAAuCJ,QAAvC;AACH;;;qCAEYF,C,EAAEC,C,EAAE;AACb,gBAAG,KAAKJ,KAAL,CAAWM,GAAX,CAAeI,MAAlB,EAAyB;AACrB,oBAAIL,WAAW,KAAKL,KAAL,CAAWM,GAAX,CAAeC,MAA9B;AACAF,yBAASF,CAAT,EAAYC,CAAZ,IAAiB,CAAjB;AACA,qBAAKJ,KAAL,CAAWQ,UAAX,CAAsBC,gBAAtB,CAAuCJ,QAAvC;;AAEAM,wBAAQC,GAAR,CAAY,MAAZ;AACH;AACJ;;;0CAEgB;AAAA,gBACLC,WADK,GACW,KAAKb,KAAL,CAAWQ,UADtB,CACLK,WADK;AAEb;;AACAA,wBAAY,IAAZ;AACAF,oBAAQC,GAAR,CAAY,OAAZ;AACH;;;uCAEa;AAAA,gBACFC,WADE,GACc,KAAKb,KAAL,CAAWQ,UADzB,CACFK,WADE;;AAEVA,wBAAY,KAAZ;AACAF,oBAAQC,GAAR,CAAY,MAAZ;AACH;;;iCAEO;AACJ,gBAAIE,MAAM,KAAKd,KAAL,CAAWe,YAArB;AACA,gBAAIC,OAAO,OAAX;;AAEAA,oBAAQ,KAAKhB,KAAL,CAAWM,GAAX,CAAeW,OAAf,CAAuBH,GAAvB,CAAR;;AAEA,mBACI;AACI,2BAAWE;AACX;AAFJ,kBAGI,aAAa,KAAKE,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAHjB;AAII,6BAAa,KAAKC,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,EAA6B,KAAKnB,KAAL,CAAWG,CAAxC,EAA2C,KAAKH,KAAL,CAAWI,CAAtD,CAJjB;AAKI,2BAAW,KAAKiB,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB;AALf,cADJ;AAWH;;;;;;kBAvDgBpB,I","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Cell extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = ({\r\n            isMouseDown: false,\r\n        });\r\n    }\r\n\r\n    clickHandle(x,y){\r\n        let newArray = this.props.map.source;\r\n        newArray[x][y] = 0;\r\n        this.props.mapActions.changedMapSource(newArray);\r\n    }\r\n\r\n    selectHandle(x,y){\r\n        if(this.props.map.select){\r\n            let newArray = this.props.map.source;\r\n            newArray[x][y] = 0;\r\n            this.props.mapActions.changedMapSource(newArray);\r\n\r\n            console.log('move');\r\n        }\r\n    }\r\n\r\n    moveStartHandle(){\r\n        const { selectCells } = this.props.mapActions;\r\n        // console.log(this.props.mapActions.selectCells);\r\n        selectCells(true);\r\n        console.log('start');\r\n    }\r\n\r\n    unMoveHandle(){\r\n        const { selectCells } = this.props.mapActions;\r\n        selectCells(false);\r\n        console.log('stop');\r\n    }\r\n\r\n    render(){\r\n        let num = this.props.serialNumber;\r\n        let temp = 'cell ';\r\n\r\n        temp += this.props.map.mapping[num];\r\n\r\n        return (\r\n            <div\r\n                className={temp}\r\n                // onClick={this.clickHandle.bind(this, this.props.x, this.props.y)}\r\n                onMouseDown={this.moveStartHandle.bind(this)}\r\n                onMouseMove={this.selectHandle.bind(this, this.props.x, this.props.y)}\r\n                onMouseUp={this.unMoveHandle.bind(this)}\r\n            >\r\n\r\n            </div>\r\n        );\r\n    }\r\n}"]}